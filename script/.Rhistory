setwd("C:/MACHINE LEARNING/titanic-kaggle")
titanic.train <- read.csv(file = "train.csv", stringsAsFactors = FALSE, header = TRUE)
titanic.test <- read.csv(file = "test.csv", stringsAsFactors = FALSE, header = TRUE)
?table
getOption("repos")
library(readr)
train <- read_csv("C:/MACHINE LEARNING/titanic-kaggle/train.csv")
View(train)
View(titanic.test)
View(titanic.train)
View(train)
str(train)
str(titanic.train
str(titanic.train)
str(titanic.train)
titanic.train$Survived
table(titanic.train$Survived)
prop.table(titanic.train$Survived)
prop.table
prop(table(titanic.train$Survived))
prop,table(table(titanic.train$Survived))
prop.table(table(titanic.train$Survived))
titanic.train <- read.csv(file = "train.csv", stringsAsFactors = FALSE, header = TRUE)
titanic.test <- read.csv(file = "test.csv", stringsAsFactors = FALSE, header = TRUE)
str(titanic.train)
prop.table
prop.table(table(titanic.train$Survived))
summary(titanic.train$Sex)
titanic.train$IsTrainSet <- TRUE
titanic.test$IsTrainSet <- FALSE
titanic.train$IsTrainSet <- TRUE
titanic.test$IsTrainSet <- FALSE
# titanic.test$Survived <- rep(0,418)
titanic.test$Survived <-NA # agrego columna Survived a test
titanic.full <- rbind(titanic.train, titanic.test) # joinea ambas tablas
titanic.full[titanic.full$Embarked == '', "Embarked"] <- '' # voy a consultar por los que no tienen valor de Embarked
age.median <- median(titanic.full$Age,na.rm=TRUE) # saca la mediana de las edades considerando los vacios
titanic.full[is.na(titanic.full$Age), "Age"] <- age.median # a los vacios le asigna la mediana, eso hay que cambiarlo
titanic.full$Pclass <- as.factor(titanic.full$Pclass)
titanic.full$Sex <- as.factor(titanic.full$Sex)
titanic.full$Embarked <- as.factor(titanic.full$Embarked)
summary(titanic.train$Sex)
summary(train$Sex)
library(readr)
train <- read_csv("C:/MACHINE LEARNING/titanic-kaggle/train.csv")
View(train)
summary(train$Sex)
prop.table(table(train$Sex, train$Survived))
prop.table(table(titanic.train$Sex, titanic.train$Survived))
summary(titanic.train$Age)
summary(titanic.train$Age)
aggregate(Survived ~ Child + Sex, data=train, FUN=function(x) {sum(x)/length(x)})
aggregate(Survived ~ Child + Sex, data=titanic.train, FUN=function(x) {sum(x)/length(x)})
titanic.train$Child <- 0
titanic.train$Child[titanic.train$Age < 18] <- 1
aggregate(Survived ~ Child + Sex, data=titanic.train, FUN=function(x) {sum(x)/length(x)})
aggregate(Survived ~ Child + Sex, data=titanic.train, FUN=function(x) {sum(x)/length(x)}, 2)
prop.table(aggregate(Survived ~ Child + Sex, data=titanic.train, FUN=function(x) {sum(x)/length(x)}),2)
prop.table(table(aggregate(Survived ~ Child + Sex, data=titanic.train, FUN=function(x) {sum(x)/length(x)})),2)
aggregate(Survived ~ Child + Sex, data=titanic.train, FUN=function(x) {sum(x)/length(x)})
train$Fare2[train$Fare < 30 & train$Fare >= 20] <- '20-30'
train$Fare2[train$Fare < 20 & train$Fare >= 10] <- '10-20'
train$Fare2[train$Fare < 10] <- '<10'
train$Fare2 <- '30 o +'
warnings()
train$Fare2 <- '30 o +'
train$Fare2[train$Fare < 30 & train$Fare >= 20] <- '20-30'
train$Fare2[train$Fare < 20 & train$Fare >= 10] <- '10-20'
train$Fare2[train$Fare < 10] <- '<10'
aggregate(Survived ~ Fare2 + Pclass + Sex, data=train, FUN=function(x) {sum(x)/length(x)})
submit <- data.frame(PassengerId = test$PassengerId, Survived = test$Survived)
write.csv(submit, file = "titanicKaggle.csv", row.names = FALSE)
titanic.train <- read.csv(file = "train.csv", stringsAsFactors = FALSE, header = TRUE)
titanic.test <- read.csv(file = "test.csv", stringsAsFactors = FALSE, header = TRUE)
titanic.train$IsTrainSet <- TRUE
titanic.test$IsTrainSet <- FALSE
table(titanic.train$Survived)
prop.table(table(titanic.train$Survived))
titanic.train$Child <- 0
titanic.train$Child[titanic.train$Age < 18] <- 1
aggregate(Survived ~ Child + Sex, data=titanic.train, FUN=function(x) {sum(x)/length(x)})
train$Fare2 <- '30 o +' # si lo pongo abajo de todo tira unos warnings
train$Fare2[train$Fare < 30 & train$Fare >= 20] <- '20-30'
train$Fare2[train$Fare < 20 & train$Fare >= 10] <- '10-20'
train$Fare2[train$Fare < 10] <- '<10'
titanic.train$Fare2 <- '30 o +' # si lo pongo abajo de todo tira unos warnings
titanic.train$Fare2[train$Fare < 30 & train$Fare >= 20] <- '20-30'
titanic.train$Fare2[train$Fare < 20 & train$Fare >= 10] <- '10-20'
titanic.train$Fare2[train$Fare < 10] <- '<10'
titanic.train$Fare2 <- '30 o +' # si lo pongo abajo de todo tira unos warnings
titanic.train$Fare2[titanic.train$Fare < 30 & titanic.train$Fare >= 20] <- '20-30'
titanic.train$Fare2[titanic.train$Fare < 20 & titanic.train$Fare >= 10] <- '10-20'
titanic.train$Fare2[titanic.train$Fare < 10] <- '<10'
aggregate(Survived ~ Fare2 + Pclass + Sex, data=train, FUN=function(x) {sum(x)/length(x)})
aggregate(Survived ~ Fare2 + Pclass + Sex, data=titanic.train, FUN=function(x) {sum(x)/length(x)})
titanic.test$Survived <- 0
titanic.test$Survived[titanic.test$Sex == 'female'] <- 1
titanic.test$Survived[titanic.test$Sex == 'female' & titanic.test$Pclass == 3 & titanic.test$Fare >= 20] <- 0
submit <- data.frame(PassengerId = titanic.test$PassengerId, Survived = titanic.test$Survived)
write.csv(submit, file = "titanicKaggle.csv", row.names = FALSE)
library(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=train,
method="class")
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.train,
method="class")
titanic.train <- read.csv(file = "train.csv", stringsAsFactors = FALSE, header = TRUE)
titanic.test <- read.csv(file = "test.csv", stringsAsFactors = FALSE, header = TRUE)
titanic.train <- read.csv(file = "train.csv", stringsAsFactors = FALSE, header = TRUE)
titanic.test <- read.csv(file = "test.csv", stringsAsFactors = FALSE, header = TRUE)
titanic.train <- read.csv(file = "train.csv", stringsAsFactors = FALSE, header = TRUE)
titanic.test <- read.csv(file = "test.csv", stringsAsFactors = FALSE, header = TRUE)
titanic.train <- read.csv(file = "train.csv", stringsAsFactors = FALSE, header = TRUE)
titanic.test <- read.csv(file = "test.csv", stringsAsFactors = FALSE, header = TRUE)
str(titanic.train)
# si uso $, uso solo una columna
titanic.train$IsTrainSet <- TRUE
titanic.test$IsTrainSet <- FALSE
titanic.train$Child <- 0
titanic.train$Child[titanic.train$Age < 18] <- 1
aggregate(Survived ~ Child + Sex, data=titanic.train, FUN=function(x) {sum(x)/length(x)})
titanic.train$Fare2 <- '30 o +' # si lo pongo abajo de todo tira unos warnings
titanic.train$Fare2[titanic.train$Fare < 30 & titanic.train$Fare >= 20] <- '20-30'
titanic.train$Fare2[titanic.train$Fare < 20 & titanic.train$Fare >= 10] <- '10-20'
titanic.train$Fare2[titanic.train$Fare < 10] <- '<10'
aggregate(Survived ~ Fare2 + Pclass + Sex, data=titanic.train, FUN=function(x) {sum(x)/length(x)})
#creo variable survived en el conjunto test, pongo las condiciones iniciales primero y dsps lo particular
titanic.test$Survived <- 0
titanic.test$Survived[titanic.test$Sex == 'female'] <- 1
titanic.test$Survived[titanic.test$Sex == 'female' & titanic.test$Pclass == 3 & titanic.test$Fare >= 20] <- 0
#arboles de decision se viene
library(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.train,
method="class")
plot(fit)
text(fit)
plot(fit)
text(fit)
install.packages('rattle')
install.packages('rpart.plot')
install.packages('RColorBrewer')
library(rattle)
library(rpart.plot)
library(RColorBrewer)
fancyRpartPlot(fit)
Prediction <- predict(fit, test, type = "class")
Prediction <- predict(fit, titanic.test, type = "class")
submit <- data.frame(PassengerId = titanic.test$PassengerId, Survived = Prediction)
write.csv(submit, file = "titanicKaggle.csv", row.names = FALSE)
?rpart.control
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=train,
method="class",
control=rpart.control(minsplit=2, cp=0))
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.train,
method="class",
control=rpart.control(minsplit=2, cp=0))
fancyRpartPlot(fit)
?rpart.control
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.train,
method="class",
control=rpart.control(minsplit=20, maxdeptch = 40, cp=0.01))
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.train,
method="class",
control=rpart.control(minsplit=20, maxdeptch = 50, cp=0.01))
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.train,
method="class",
control=rpart.control(minsplit=20, cp=0.50))
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.train,
method="class",
control=rpart.control(minsplit=20, cp=0.10))
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.train,
method="class",
control=rpart.control(minsplit=20, cp=0.001))
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.train,
method="class",
control=rpart.control(minsplit=20, cp=0.0001))
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.train,
method="class",
control=rpart.control(minsplit=20, cp=0.01))
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.train,
method="class",
control=rpart.control(minsplit=100, cp=0.01))
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.train,
method="class",
control=rpart.control(minsplit=100, cp=0.01, maxdepth = 40))
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.train,
method="class",
control=rpart.control(minsplit=100, cp=0.01, maxdepth = 30))
fancyRpartPlot(fit)
#grafica el arbol mucho mejor que el plot y el text
new.fit <- prp(fit,snip=TRUE)$obj
fancyRpartPlot(new.fit)
titanic.train$Name[1]
titanic.train$Name[0]
q()
